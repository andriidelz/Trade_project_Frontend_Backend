"""Add inventory table

Revision ID: f9fba75d74d7
Revises: 
Create Date: 2024-12-11 18:11:21.963491

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f9fba75d74d7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_batches_id', table_name='batches')
    op.drop_table('batches')
    op.drop_index('ix_invoices_id', table_name='invoices')
    op.drop_table('invoices')
    op.drop_index('ix_products_id', table_name='products')
    op.drop_table('products')
    op.drop_index('ix_invoiceitems_id', table_name='invoiceitems')
    op.drop_table('invoiceitems')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invoiceitems',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name='invoiceitems_invoice_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='invoiceitems_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='invoiceitems_pkey')
    )
    op.create_index('ix_invoiceitems_id', 'invoiceitems', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('products_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unit_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_products_id', 'products', ['id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='invoices_pkey')
    )
    op.create_index('ix_invoices_id', 'invoices', ['id'], unique=False)
    op.create_table('batches',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('batch_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('purchase_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='batches_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='batches_pkey')
    )
    op.create_index('ix_batches_id', 'batches', ['id'], unique=False)
    # ### end Alembic commands ###
